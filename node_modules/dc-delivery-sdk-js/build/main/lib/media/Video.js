"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Video = void 0;
var Media_1 = require("./Media");
var FragmentMeta_1 = require("../content/model/FragmentMeta");
var ImageUrlBuilder_1 = require("./ImageUrlBuilder");
var MediaMeta_1 = require("./MediaMeta");
/**
 * Class representing a Video resource with helper functions.s
 */
var Video = /** @class */ (function (_super) {
    __extends(Video, _super);
    /**
     * Creates a new Video instance.
     * @param data JSON data from delivery API
     */
    function Video(data, config) {
        var _this = _super.call(this, data, config) || this;
        if (data && data._meta) {
            _this._meta = new MediaMeta_1.VideoMeta(data._meta);
        }
        return _this;
    }
    /**
     * Returns a builder which can be used to construct a video thumbnail URL.
     * You can apply transformations such as resize and image format using the returned builder.
     *
     * ```typescript
     * video.thumbnail().width(500).build();
     * ```
     */
    Video.prototype.thumbnail = function () {
        return new ImageUrlBuilder_1.ImageUrlBuilder(this);
    };
    /**
     * Export Video to JSON
     */
    Video.prototype.toJSON = function () {
        var result = _super.prototype.toJSON.call(this);
        if (this._meta) {
            result._meta = this._meta.toJSON();
        }
        return result;
    };
    /**
     * @hidden
     * Returns true if the provided fragment is a video
     * @param fragment
     */
    Video.isVideo = function (fragment) {
        return (FragmentMeta_1.FragmentMeta.isFragment(fragment) &&
            fragment._meta.schema ===
                'http://bigcontent.io/cms/schema/v1/core#/definitions/video-link');
    };
    return Video;
}(Media_1.Media));
exports.Video = Video;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVmlkZW8uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbGliL21lZGlhL1ZpZGVvLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxpQ0FBZ0M7QUFDaEMsOERBQTZEO0FBQzdELHFEQUFvRDtBQUVwRCx5Q0FBd0M7QUFFeEM7O0dBRUc7QUFDSDtJQUEyQix5QkFBSztJQU05Qjs7O09BR0c7SUFDSCxlQUFZLElBQVMsRUFBRSxNQUFpQztRQUF4RCxZQUNFLGtCQUFNLElBQUksRUFBRSxNQUFNLENBQUMsU0FJcEI7UUFIQyxJQUFJLElBQUksSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ3RCLEtBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxxQkFBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUN4Qzs7SUFDSCxDQUFDO0lBRUQ7Ozs7Ozs7T0FPRztJQUNILHlCQUFTLEdBQVQ7UUFDRSxPQUFPLElBQUksaUNBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRUQ7O09BRUc7SUFDSCxzQkFBTSxHQUFOO1FBQ0UsSUFBTSxNQUFNLEdBQUcsaUJBQU0sTUFBTSxXQUFFLENBQUM7UUFDOUIsSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ2QsTUFBTSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDO1NBQ3BDO1FBQ0QsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQztJQUVEOzs7O09BSUc7SUFDVyxhQUFPLEdBQXJCLFVBQXNCLFFBQWE7UUFDakMsT0FBTyxDQUNMLDJCQUFZLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQztZQUNqQyxRQUFRLENBQUMsS0FBSyxDQUFDLE1BQU07Z0JBQ25CLGlFQUFpRSxDQUNwRSxDQUFDO0lBQ0osQ0FBQztJQUNILFlBQUM7QUFBRCxDQUFDLEFBcERELENBQTJCLGFBQUssR0FvRC9CO0FBcERZLHNCQUFLIn0=