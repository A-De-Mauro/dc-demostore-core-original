"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImageUrlBuilder = void 0;
/**
 * Utility which helps construct URLs to image resources hosted using the Amplience Dynamic Media platform.
 *
 * Commonly used transformations can chained together by calling the appropriate function on the builder.
 * Advanced transformations can be used by configuring a transformation template within the Amplience
 * back-office and applying the template to the builder.
 */
var ImageUrlBuilder = /** @class */ (function () {
    function ImageUrlBuilder(media) {
        this.media = media;
        this._protocol = 'https';
        this._query = [];
    }
    /**
     * Protocol configures what protocol style to use when building the image URL.
     *
     * ```{{protocol}}[:]//images.site.com/i/account/image```
     * @param value URL protocol, valid values are: http, https and // for protocol relative URLs
     */
    ImageUrlBuilder.prototype.protocol = function (value) {
        this._protocol = value;
        return this;
    };
    /**
     * Host configures the hostname to use when building the image URL.
     * By default, the SDK will use the most appropriate hostname based on
     * the SDK configuration.
     *
     * ```https://{{host}}/i/account/image```
     * @param value Hostname to use instead of the default value.
     */
    ImageUrlBuilder.prototype.host = function (value) {
        this._host = value;
        return this;
    };
    /**
     * Format converts the image to the file format specified.
     * The format will be appended to the URL as a file extension.
     *
     * ```https://images.site.com/i/account/image.webp```
     * @param value  Images format to use when encoding the output.
     */
    ImageUrlBuilder.prototype.format = function (value) {
        this._format = value;
        return this;
    };
    /**
     * SEO filename allows a custom filename to be used to improve SEO.
     *
     * ```https://images.site.com/i/account/image/{{seoFileName}}```
     * @param value
     */
    ImageUrlBuilder.prototype.seoFileName = function (value) {
        this._seoFileName = value;
        return this;
    };
    /**
     * Template applies a transformation template to the image, which will
     * apply all of the transformation parameters contained in the template to the image.
     *
     * ```https://images.site.com/i/account/image?${{name}}$```
     * @param name The name of the transformation template previously configured in the Amplience back-office.
     */
    ImageUrlBuilder.prototype.template = function (name) {
        this._query.push("$" + encodeURIComponent(name) + "$");
        return this;
    };
    /**
     * Parameter appends the specified parameter to the query string. This can be used to
     * pass variables into templates.
     *
     * ```https://images.site.com/i/account/image?{{name}}={{value}}```
     * @param name
     * @param value
     */
    ImageUrlBuilder.prototype.parameter = function (name, value) {
        this._query.push(encodeURIComponent(name) + "=" + encodeURIComponent(value));
        return this;
    };
    /**
     * Quality sets the compression level for the image output
     *
     * ```https://images.site.com/i/account/image?qlt={{value}}```
     * @param value The quality percentage (0-100)
     */
    ImageUrlBuilder.prototype.quality = function (value) {
        this._query.push("qlt=" + value);
        return this;
    };
    /**
     * Sharpen applies an unsharp mask to the image to refine edges or make an image look more crisp.
     *
     * ```https://images.site.com/i/account/image?unsharp={{radius}},{{sigma}},{{amount}},{{threshold}}```
     *
     * @param radius The radius of the Gaussian, in pixels, not counting the center pixel.
     * @param sigma The standard deviation of the Gaussian, in pixels.
     * @param amount The percentage of the difference between the original and the blur image that is added back into the original.
     * @param threshold The threshold, as a fraction of MaxRGB, needed to apply the difference amount.
     */
    ImageUrlBuilder.prototype.sharpen = function (radius, sigma, amount, threshold) {
        if (radius === void 0) { radius = 0; }
        if (sigma === void 0) { sigma = 1; }
        if (amount === void 0) { amount = 1; }
        if (threshold === void 0) { threshold = 0.05; }
        this._query.push("unsharp=" + radius + "," + sigma + "," + amount + "," + threshold);
        return this;
    };
    /**
     * Width resizes an image to the pixel size provided. If you only provide one axis,
     * the other will be calculated to maintain aspect ratio. Use the scale mode parameter
     * to apply different resize effects like stretch or crop.
     *
     * ```https://images.site.com/i/account/image?w={{value}}```
     * @param value The new width in pixels.
     */
    ImageUrlBuilder.prototype.width = function (value) {
        this._query.push("w=" + value);
        return this;
    };
    /**
     * Height resizes an image to the pixel size provided. If you only provide one axis,
     * the other will be calculated to maintain aspect ratio. Use the scale mode parameter
     * to apply different resize effects like stretch or crop.
     *
     * ```https://images.site.com/i/account/image?h={{value}}```
     * @param value The new height in pixels.
     */
    ImageUrlBuilder.prototype.height = function (value) {
        this._query.push("h=" + value);
        return this;
    };
    /**
     * Returns the fully constructed URL for this image with any transformations.
     */
    ImageUrlBuilder.prototype.build = function () {
        var isSecure = this._protocol === '//' || this._protocol === 'https';
        var isVideo = this.media._meta &&
            this.media._meta.schema ===
                'http://bigcontent.io/cms/schema/v1/core#/definitions/video-link';
        var url = this._protocol === '//' ? '//' : this._protocol + "://";
        var host = this._host ? this._host : this.media.getHost(isSecure);
        url += host;
        url += "/" + (isVideo ? 'v' : 'i') + "/";
        url += encodeURIComponent(this.media.endpoint);
        url += '/';
        url += encodeURIComponent(this.media.name);
        if (this._seoFileName) {
            url += '/';
            url += encodeURIComponent(this._seoFileName);
        }
        if (this._format) {
            url += "." + this._format;
        }
        if (this._query.length > 0) {
            url += '?';
            url += this._query.join('&');
        }
        return url;
    };
    return ImageUrlBuilder;
}());
exports.ImageUrlBuilder = ImageUrlBuilder;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW1hZ2VVcmxCdWlsZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9tZWRpYS9JbWFnZVVybEJ1aWxkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBR0E7Ozs7OztHQU1HO0FBQ0g7SUFPRSx5QkFBNkIsS0FBWTtRQUFaLFVBQUssR0FBTCxLQUFLLENBQU87UUFOakMsY0FBUyxHQUFHLE9BQU8sQ0FBQztRQUlYLFdBQU0sR0FBYSxFQUFFLENBQUM7SUFFSyxDQUFDO0lBRTdDOzs7OztPQUtHO0lBQ0gsa0NBQVEsR0FBUixVQUFTLEtBQWE7UUFDcEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7UUFDdkIsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQ7Ozs7Ozs7T0FPRztJQUNILDhCQUFJLEdBQUosVUFBSyxLQUFhO1FBQ2hCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ25CLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVEOzs7Ozs7T0FNRztJQUNILGdDQUFNLEdBQU4sVUFBTyxLQUFrQjtRQUN2QixJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztRQUNyQixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNILHFDQUFXLEdBQVgsVUFBWSxLQUFhO1FBQ3ZCLElBQUksQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDO1FBQzFCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVEOzs7Ozs7T0FNRztJQUNILGtDQUFRLEdBQVIsVUFBUyxJQUFZO1FBQ25CLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQUksa0JBQWtCLENBQUMsSUFBSSxDQUFDLE1BQUcsQ0FBQyxDQUFDO1FBQ2xELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVEOzs7Ozs7O09BT0c7SUFDSCxtQ0FBUyxHQUFULFVBQVUsSUFBWSxFQUFFLEtBQWE7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