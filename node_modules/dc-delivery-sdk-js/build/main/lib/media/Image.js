"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Image = void 0;
var Media_1 = require("./Media");
var MediaMeta_1 = require("./MediaMeta");
var FragmentMeta_1 = require("../content/model/FragmentMeta");
var ImageUrlBuilder_1 = require("./ImageUrlBuilder");
/**
 * Class representing an Image resource with helper functions.
 * Image URL helper functions will take into consideration staging and custom hostname overrides.
 */
var Image = /** @class */ (function (_super) {
    __extends(Image, _super);
    /**
     * Creates a new Image instance.
     * @param data JSON data from delivery API
     * @param config Client configuration
     */
    function Image(data, config) {
        var _this = _super.call(this, data, config) || this;
        if (data && data._meta) {
            _this._meta = new MediaMeta_1.ImageMeta(data._meta);
        }
        return _this;
    }
    /**
     * Returns a builder which can be used to construct a URL to this image resource.
     * You can apply transformations such as resize and image format using the returned builder.
     *
     * ```typescript
     * image.thumbnail().width(500).build();
     * ```
     */
    Image.prototype.url = function () {
        return new ImageUrlBuilder_1.ImageUrlBuilder(this);
    };
    /**
     * Export Image to JSON
     */
    Image.prototype.toJSON = function () {
        var result = _super.prototype.toJSON.call(this);
        if (this._meta) {
            result._meta = this._meta.toJSON();
        }
        return result;
    };
    /**
     * @hidden
     * Returns true if the provided fragment is an image
     * @param fragment
     */
    Image.isImage = function (fragment) {
        return (FragmentMeta_1.FragmentMeta.isFragment(fragment) &&
            fragment._meta.schema ===
                'http://bigcontent.io/cms/schema/v1/core#/definitions/image-link');
    };
    return Image;
}(Media_1.Media));
exports.Image = Image;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW1hZ2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbGliL21lZGlhL0ltYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxpQ0FBZ0M7QUFDaEMseUNBQXdDO0FBQ3hDLDhEQUE2RDtBQUM3RCxxREFBb0Q7QUFHcEQ7OztHQUdHO0FBQ0g7SUFBMkIseUJBQUs7SUFDOUI7Ozs7T0FJRztJQUNILGVBQVksSUFBUyxFQUFFLE1BQWlDO1FBQXhELFlBQ0Usa0JBQU0sSUFBSSxFQUFFLE1BQU0sQ0FBQyxTQUlwQjtRQUhDLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDdEIsS0FBSSxDQUFDLEtBQUssR0FBRyxJQUFJLHFCQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ3hDOztJQUNILENBQUM7SUFFRDs7Ozs7OztPQU9HO0lBQ0gsbUJBQUcsR0FBSDtRQUNFLE9BQU8sSUFBSSxpQ0FBZSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUFDRDs7T0FFRztJQUNILHNCQUFNLEdBQU47UUFDRSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxNQUFNLFdBQUUsQ0FBQztRQUM5QixJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDZCxNQUFNLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUM7U0FDcEM7UUFDRCxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNXLGFBQU8sR0FBckIsVUFBc0IsUUFBYTtRQUNqQyxPQUFPLENBQ0wsMkJBQVksQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDO1lBQ2pDLFFBQVEsQ0FBQyxLQUFLLENBQUMsTUFBTTtnQkFDbkIsaUVBQWlFLENBQ3BFLENBQUM7SUFDSixDQUFDO0lBQ0gsWUFBQztBQUFELENBQUMsQUEvQ0QsQ0FBMkIsYUFBSyxHQStDL0I7QUEvQ1ksc0JBQUsifQ==