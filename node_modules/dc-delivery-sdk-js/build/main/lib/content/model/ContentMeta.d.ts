import { Edition } from './Edition';
import { ContentLifecycle } from './ContentLifecycle';
import { FragmentMeta } from './FragmentMeta';
import { Hierarchy } from './Hierarchy';
/**
 * Class providing meta data about an Content Reference resource.
 */
export declare class ContentReferenceMeta extends FragmentMeta {
    constructor(data?: any);
}
export interface IContentMeta {
    /**
     * Metadata related to the edition that published this content item. If the content was not published using
     * an edition this will be undefined.
     */
    edition?: Edition;
    /**
     * Delivery ID of the content item
     */
    deliveryId: string;
    /**
     * Delivery Key of the content item
     */
    deliveryKey?: string;
    /**
     * Metadata related to the lifecycle status of this content item, by default this is undefined.
     * Business users can flag content to expire at a certain time. If this option is chosen this property
     * will be set with the chosen expiry time.
     */
    lifecycle?: ContentLifecycle;
    /**
     * Name of the content item
     */
    name: string;
    /**
     * Metadata related to hierarchies
     */
    hierarchy?: Hierarchy;
}
/**
 * Class providing meta data about a content item with helper functions.
 */
export declare class ContentMeta extends FragmentMeta {
    /**
     * Metadata related to the edition that published this content item. If the content was not published using
     * an edition this will be undefined.
     */
    edition?: Edition;
    /**
     * Delivery ID of the content item
     */
    deliveryId: string;
    /**
     * Delivery Key of the content item
     */
    deliveryKey?: string;
    /**
     * Metadata related to the lifecycle status of this content item, by default this is undefined.
     * Business users can flag content to expire at a certain time. If this option is chosen this property
     * will be set with the chosen expiry time.
     */
    lifecycle?: ContentLifecycle;
    /**
     * Name of the content item
     */
    name: string;
    /**
     * Metadata related to hierarchies
     */
    hierarchy?: Hierarchy;
    /**
     * Creates a new ContentMeta instance.
     * @param data JSON representation of the ContentMeta model
     */
    constructor(data?: any);
    /**
     * Export to JSON
     */
    toJSON(): any;
    /**
     * @hidden
     * Returns true if the provided node is a content item meta data object
     * @param node JSON node to test
     */
    static isContentMeta(node: any): boolean;
    /**
     * @hidden
     * Returns true if the provided node is a content body object
     * @param node JSON node to test
     */
    static isContentBody(node: any): boolean;
}
