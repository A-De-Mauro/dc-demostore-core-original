"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetContentItemV1Impl = void 0;
var Url_1 = require("../../utils/Url");
var JsonWalker_1 = require("../../utils/JsonWalker");
var ContentItem_1 = require("../model/ContentItem");
var ContentNotFoundError_1 = require("../model/ContentNotFoundError");
var HttpError_1 = require("../model/HttpError");
/**
 * @hidden
 */
var LD_ID = '@id';
/**
 * @hidden
 */
var LD_TYPE = '@type';
/**
 * @hidden
 */
var LD_GRAPH = '@graph';
/**
 * @hidden
 */
var GetContentItemV1Impl = /** @class */ (function () {
    function GetContentItemV1Impl(config, contentClient, mapper) {
        this.config = config;
        this.contentClient = contentClient;
        this.mapper = mapper;
    }
    /**
     * @deprecated use getContentItemById
     */
    GetContentItemV1Impl.prototype.getContentItem = function (id) {
        return this.getContentItemById(id);
    };
    GetContentItemV1Impl.prototype.getContentItemById = function (id) {
        return __awaiter(this, void 0, void 0, function () {
            var url, response, contentItems, item, err_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        url = this.getUrl({
                            'sys.iri': "http://content.cms.amplience.com/" + id,
                        });
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, this.contentClient.get(url)];
                    case 2:
                        response = _a.sent();
                        contentItems = this.processResponse(response.data);
                        if (contentItems.length === 0) {
                            throw new ContentNotFoundError_1.ContentNotFoundError(id);
                        }
                        item = contentItems.find(function (x) { return x._meta.deliveryId === id; });
                        if (!item) {
                            throw new ContentNotFoundError_1.ContentNotFoundError(id);
                        }
                        return [2 /*return*/, this.hydrateContentItem(item)];
                    case 3:
                        err_1 = _a.sent();
                        if (err_1.response) {
                            throw new HttpError_1.HttpError(err_1.response.status, err_1.response.data);
                        }
                        throw err_1;
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    GetContentItemV1Impl.prototype.getUrl = function (query) {
        var args = [
            ['query', JSON.stringify(query)],
            ['fullBodyObject', 'true'],
            ['scope', 'tree'],
            ['store', this.config.account],
        ];
        if (this.config.locale) {
            args.push(['locale', this.config.locale]);
        }
        var queryString = Url_1.encodeQueryString(args);
        return "/cms/content/query?" + queryString;
    };
    /**
     * Convert plain content JSON into ContentItem instamce
     * @param content
     */
    GetContentItemV1Impl.prototype.hydrateContentItem = function (content) {
        var contentItem = new ContentItem_1.ContentItem();
        contentItem.body = this.mapper.toMappedContent(content);
        return contentItem;
    };
    /**
     * Pre-processes the response to create a single content item object
     * with all linked content items inlined.
     * @param data Response from content query API
     */
    GetContentItemV1Impl.prototype.processResponse = function (data) {
        var _this = this;
        if (!data.result || !data[LD_GRAPH] || !Array.isArray(data.result)) {
            return [];
        }
        else {
            var graph = data[LD_GRAPH];
            var graphChildrenById_1 = {};
            graph.forEach(function (child) { return (graphChildrenById_1[child[LD_ID]] = child); });
            return data.result.map(function (result) {
                result = graphChildrenById_1[result[LD_ID]];
                // inline linked items
                result = JsonWalker_1.walkAndReplace(result, {
                    beforeWalk: function (node) {
                        if (typeof node === 'object' && node !== null) {
                            if (node[LD_ID]) {
                                node = graphChildrenById_1[node[LD_ID]];
                            }
                        }
                        return node;
                    },
                });
                // upgrade legacy content & remove json-ld
                result = JsonWalker_1.walkAndReplace(result, {
                    beforeWalk: function (node) {
                        node = _this.upgradeLegacyContent(node);
                        node = _this.injectMetaData(node);
                        node = _this.removeJsonLD(node);
                        return node;
                    },
                });
                return result;
            });
        }
    };
    /**
     * Content produced by older versions do not include _meta.schema.
     * This function inserts those values to normalize the output
     */
    GetContentItemV1Impl.prototype.upgradeLegacyContent = function (node) {
        if (!node) {
            return node;
        }
        var type = node[LD_TYPE];
        var id = node[LD_ID];
        var isImage = id && id.indexOf('http://image.cms.amplience.com/') === 0;
        var isVideo = id && id.indexOf('http://video.cms.amplience.com/') === 0;
        if (type || isImage || isVideo) {
            if (!node._meta) {
                node._meta = {};
            }
            if (type) {
                if (!node._meta.schema) {
                    node._meta.schema = type;
                }
                if (!node._meta.name && node._title) {
                    node._meta.name = node._title;
                }
            }
            else if (isImage) {
                node._meta.schema =
                    'http://bigcontent.io/cms/schema/v1/core#/definitions/image-link';
            }
            else if (isVideo) {
                node._meta.schema =
                    'http://bigcontent.io/cms/schema/v1/core#/definitions/video-link';
            }
        }
        return node;
    };
    /**
     * Injects additional meta data which is lost by removing
     * the JSON-LD properties
     */
    GetContentItemV1Impl.prototype.injectMetaData = function (node) {
        if (node) {
            var id = node[LD_ID];
            if (id) {
                if (id.indexOf('http://content.cms.amplience.com/') === 0) {
                    node._meta = node._meta || {};
                    node._meta.deliveryId = id.slice(33);
                }
                else if (id.indexOf('http://image.cms.amplience.com/') === 0 ||
                    id.indexOf('http://video.cms.amplience.com/') === 0) {
                    node.id = id.slice(31);
                }
            }
        }
        return node;
    };
    /**
     * JSON-LD keywords are just for delivery payload
     */
    GetContentItemV1Impl.prototype.removeJsonLD = function (node) {
        if (node) {
            delete node[LD_TYPE];
            delete node[LD_ID];
        }
        return node;
    };
    return GetContentItemV1Impl;
}());
exports.GetContentItemV1Impl = GetContentItemV1Impl;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2V0Q29udGVudEl0ZW1WMUltcGwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvbnRlbnQvY29vcmRpbmF0b3JzL0dldENvbnRlbnRJdGVtVjFJbXBsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLHVDQUFvRDtBQUNwRCxxREFBd0Q7QUFDeEQsb0RBQW1EO0FBTW5ELHNFQUFxRTtBQUNyRSxnREFBK0M7QUFFL0M7O0dBRUc7QUFDSCxJQUFNLEtBQUssR0FBRyxLQUFLLENBQUM7QUFFcEI7O0dBRUc7QUFDSCxJQUFNLE9BQU8sR0FBRyxPQUFPLENBQUM7QUFFeEI7O0dBRUc7QUFDSCxJQUFNLFFBQVEsR0FBRyxRQUFRLENBQUM7QUFFMUI7O0dBRUc7QUFDSDtJQUNFLDhCQUNtQixNQUE2QixFQUM3QixhQUE0QixFQUM1QixNQUFxQjtRQUZyQixXQUFNLEdBQU4sTUFBTSxDQUF1QjtRQUM3QixrQkFBYSxHQUFiLGFBQWEsQ0FBZTtRQUM1QixXQUFNLEdBQU4sTUFBTSxDQUFlO0lBQ3JDLENBQUM7SUFFSjs7T0FFRztJQUNILDZDQUFjLEdBQWQsVUFBc0MsRUFBVTtRQUM5QyxPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBRUssaURBQWtCLEdBQXhCLFVBQ0UsRUFBVTs7Ozs7O3dCQUVKLEdBQUcsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDOzRCQUN0QixTQUFTLEVBQUUsc0NBQW9DLEVBQUk7eUJBQ3BELENBQUMsQ0FBQzs7Ozt3QkFHZ0IscUJBQU0sSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUE7O3dCQUE1QyxRQUFRLEdBQUcsU0FBaUM7d0JBQzVDLFlBQVksR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMs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