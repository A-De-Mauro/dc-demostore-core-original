"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RenderContentItem = void 0;
var Url_1 = require("../../utils/Url");
var RenderedContentItem_1 = require("../model/RenderedContentItem");
var Edition_1 = require("../../content/model/Edition");
var ContentLifecycle_1 = require("../../content/model/ContentLifecycle");
/**
 * @hidden
 */
var RenderContentItem = /** @class */ (function () {
    function RenderContentItem(config, contentClient) {
        this.config = config;
        this.contentClient = contentClient;
    }
    RenderContentItem.prototype.renderContentItem = function (contentItemId, templateName, customParameters) {
        var _this = this;
        var queryParameters = this.getQueryParams(templateName, customParameters);
        var queryString = Url_1.encodeQueryString(queryParameters);
        var path = "/v1/content/" + encodeURIComponent(this.config.account) + "/content-item/" + encodeURIComponent(contentItemId);
        return this.contentClient.get(path + "?" + queryString).then(function (response) {
            return _this.parseResponse(response);
        });
    };
    RenderContentItem.prototype.getQueryParams = function (templateName, customParameters) {
        var queryParameters = [['template', templateName]];
        if (customParameters) {
            for (var _i = 0, _a = Object.keys(customParameters); _i < _a.length; _i++) {
                var key = _a[_i];
                var value = customParameters[key];
                queryParameters.push(["crparam." + key, value]);
            }
        }
        if (this.config.locale) {
            queryParameters.push(['locale', this.config.locale]);
        }
        return queryParameters;
    };
    RenderContentItem.prototype.parseResponse = function (response) {
        var headers = response.headers;
        var result = new RenderedContentItem_1.RenderedContentItem();
        result.body = response.data;
        if (headers) {
            var editionId = headers['X-Amp-Edition-ID'];
            var editionStart = headers['X-Amp-Edition-Start-Time'];
            var editionEnd = headers['X-Amp-Edition-End-Time'];
            var lifecycleExpiryTime = headers['X-Amp-Lifecycle-Expiry-Time'];
            if (editionId) {
                result.edition = new Edition_1.Edition({
                    id: editionId,
                    start: editionStart,
                    end: editionEnd,
                });
            }
            if (lifecycleExpiryTime) {
                result.lifecycle = new ContentLifecycle_1.ContentLifecycle({
                    expiryTime: lifecycleExpiryTime,
                });
            }
        }
        return result;
    };
    return RenderContentItem;
}());
exports.RenderContentItem = RenderContentItem;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVuZGVyQ29udGVudEl0ZW0uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL3JlbmRlcmluZy9jb29yZGluYXRvcnMvUmVuZGVyQ29udGVudEl0ZW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsdUNBQW9EO0FBQ3BELG9FQUFtRTtBQUNuRSx1REFBc0Q7QUFDdEQseUVBQXdFO0FBSXhFOztHQUVHO0FBQ0g7SUFDRSwyQkFDbUIsTUFBNkIsRUFDN0IsYUFBNEI7UUFENUIsV0FBTSxHQUFOLE1BQU0sQ0FBdUI7UUFDN0Isa0JBQWEsR0FBYixhQUFhLENBQWU7SUFDNUMsQ0FBQztJQUVKLDZDQUFpQixHQUFqQixVQUNFLGFBQXFCLEVBQ3JCLFlBQW9CLEVBQ3BCLGdCQUEyQztRQUg3QyxpQkFhQztRQVJDLElBQU0sZUFBZSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsWUFBWSxFQUFFLGdCQUFnQixDQUFDLENBQUM7UUFDNUUsSUFBTSxXQUFXLEdBQUcsdUJBQWlCLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDdkQsSUFBTSxJQUFJLEdBQUcsaUJBQWUsa0JBQWtCLENBQzVDLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUNwQixzQkFBaUIsa0JBQWtCLENBQUMsYUFBYSxDQUFHLENBQUM7UUFDdEQsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBSSxJQUFJLFNBQUksV0FBYSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQUMsUUFBUTtZQUNwRSxPQUFPLEtBQUksQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDdEMsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsMENBQWMsR0FBZCxVQUNFLFlBQW9CLEVBQ3BCLGdCQUEyQztRQUUzQyxJQUFNLGVBQWUsR0FBRyxDQUFDLENBQUMsVUFBVSxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUM7UUFFckQsSUFBSSxnQkFBZ0IsRUFBRTtZQUNwQixLQUFrQixVQUE2QixFQUE3QixLQUFBLE1BQU0sQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsRUFBN0IsY0FBNkIsRUFBN0IsSUFBNkIsRUFBRTtnQkFBNUMsSUFBTSxHQUFHLFNBQUE7Z0JBQ1osSUFBTSxLQUFLLEdBQUcsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLENBQUM7Z0JBQ3BDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxhQUFXLEdBQUssRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO2FBQ2pEO1NBQ0Y7UUFFRCxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFO1lBQ3RCLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1NBQ3REO1FBRUQsT0FBTyxlQUFlLENBQUM7SUFDekIsQ0FBQztJQUVELHlDQUFhLEdBQWIsVUFBYyxRQUF1QjtRQUNuQyxJQUFNLE9BQU8sR0FBRyxRQUFRLENBQUMsT0FBTyxDQUFDO1FBRWpDLElBQU0sTUFBTSxHQUFHLElBQUkseUNBQW1CLEVBQUUsQ0FBQztRQUN6QyxNQUFNLENBQUMsSUFBSSxHQUFHLFFBQVEsQ0FBQyxJQUFJLENBQUM7UUFFNUIsSUFBSSxPQUFPLEVBQUU7WUFDWCxJQUFNLFNBQVMsR0FBRyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQztZQUM5QyxJQUFNLFlBQVksR0FBRyxPQUFPLENBQUMsMEJBQTBCLENBQUMsQ0FBQztZQUN6RCxJQUFNLFVBQVUsR0FBRyxPQUFPLENBQUMsd0JBQXdCLENBQUMsQ0FBQztZQUNyRCxJQUFNLG1CQUFtQixHQUFHLE9BQU8sQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDO1lBRW5FLElBQUksU0FBUyxFQUFFO2dCQUNiLE1BQU0sQ0FBQyxPQUFPLEdBQUcsSUFBSSxpQkFBTyxDQUFDO29CQUMzQixFQUFFLEVBQUUsU0FBUztvQkFDYixLQUFLLEVBQUUsWUFBWTtvQkFDbkIsR0FBRyxFQUFFLFVBQVU7aUJBQ2hCLENBQUMsQ0FBQzthQUNKO1lBRUQsSUFBSSxtQkFBbUIsRUFBRTtnQkFDdkIsTUFBTSxDQUFDLFNBQVMsR0FBRyxJQUFJLG1DQUFnQixDQUFDO29CQUN0QyxVQUFVLEVBQUUsbUJBQW1CO2lCQUNoQyxDQUFDLENBQUM7YUFDSjtTQUNGO1FBRUQsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQztJQUNILHdCQUFDO0FBQUQsQ0FBQyxBQXRFRCxJQXNFQztBQXRFWSw4Q0FBaUIifQ==