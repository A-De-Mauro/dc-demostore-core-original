import { encodeQueryString } from '../../utils/Url';
import { RenderedContentItem } from '../model/RenderedContentItem';
import { Edition } from '../../content/model/Edition';
import { ContentLifecycle } from '../../content/model/ContentLifecycle';
/**
 * @hidden
 */
export class RenderContentItem {
    constructor(config, contentClient) {
        this.config = config;
        this.contentClient = contentClient;
    }
    renderContentItem(contentItemId, templateName, customParameters) {
        const queryParameters = this.getQueryParams(templateName, customParameters);
        const queryString = encodeQueryString(queryParameters);
        const path = `/v1/content/${encodeURIComponent(this.config.account)}/content-item/${encodeURIComponent(contentItemId)}`;
        return this.contentClient.get(`${path}?${queryString}`).then((response) => {
            return this.parseResponse(response);
        });
    }
    getQueryParams(templateName, customParameters) {
        const queryParameters = [['template', templateName]];
        if (customParameters) {
            for (const key of Object.keys(customParameters)) {
                const value = customParameters[key];
                queryParameters.push([`crparam.${key}`, value]);
            }
        }
        if (this.config.locale) {
            queryParameters.push(['locale', this.config.locale]);
        }
        return queryParameters;
    }
    parseResponse(response) {
        const headers = response.headers;
        const result = new RenderedContentItem();
        result.body = response.data;
        if (headers) {
            const editionId = headers['X-Amp-Edition-ID'];
            const editionStart = headers['X-Amp-Edition-Start-Time'];
            const editionEnd = headers['X-Amp-Edition-End-Time'];
            const lifecycleExpiryTime = headers['X-Amp-Lifecycle-Expiry-Time'];
            if (editionId) {
                result.edition = new Edition({
                    id: editionId,
                    start: editionStart,
                    end: editionEnd,
                });
            }
            if (lifecycleExpiryTime) {
                result.lifecycle = new ContentLifecycle({
                    expiryTime: lifecycleExpiryTime,
                });
            }
        }
        return result;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVuZGVyQ29udGVudEl0ZW0uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL3JlbmRlcmluZy9jb29yZGluYXRvcnMvUmVuZGVyQ29udGVudEl0ZW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDcEQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDbkUsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBSXhFOztHQUVHO0FBQ0gsTUFBTSxPQUFPLGlCQUFpQjtJQUM1QixZQUNtQixNQUE2QixFQUM3QixhQUE0QjtRQUQ1QixXQUFNLEdBQU4sTUFBTSxDQUF1QjtRQUM3QixrQkFBYSxHQUFiLGFBQWEsQ0FBZTtJQUM1QyxDQUFDO0lBRUosaUJBQWlCLENBQ2YsYUFBcUIsRUFDckIsWUFBb0IsRUFDcEIsZ0JBQTJDO1FBRTNDLE1BQU0sZUFBZSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsWUFBWSxFQUFFLGdCQUFnQixDQUFDLENBQUM7UUFDNUUsTUFBTSxXQUFXLEdBQUcsaUJBQWlCLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDdkQsTUFBTSxJQUFJLEdBQUcsZUFBZSxrQkFBa0IsQ0FDNUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQ3BCLGlCQUFpQixrQkFBa0IsQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDO1FBQ3RELE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLElBQUksV0FBVyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxRQUFRLEVBQUUsRUFBRTtZQUN4RSxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDdEMsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsY0FBYyxDQUNaLFlBQW9CLEVBQ3BCLGdCQUEyQztRQUUzQyxNQUFNLGVBQWUsR0FBRyxDQUFDLENBQUMsVUFBVSxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUM7UUFFckQsSUFBSSxnQkFBZ0IsRUFBRTtZQUNwQixLQUFLLE1BQU0sR0FBRyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsRUFBRTtnQkFDL0MsTUFBTSxLQUFLLEdBQUcsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLENBQUM7Z0JBQ3BDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxXQUFXLEdBQUcsRUFBRSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUM7YUFDakQ7U0FDRjtRQUVELElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUU7WUFDdEIsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7U0FDdEQ7UUFFRCxPQUFPLGVBQWUsQ0FBQztJQUN6QixDQUFDO0lBRUQsYUFBYSxDQUFDLFFBQXVCO1FBQ25DLE1BQU0sT0FBTyxHQUFHLFFBQVEsQ0FBQyxPQUFPLENBQUM7UUFFakMsTUFBTSxNQUFNLEdBQUcsSUFBSSxtQkFBbUIsRUFBRSxDQUFDO1FBQ3pDLE1BQU0sQ0FBQyxJQUFJLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQztRQUU1QixJQUFJLE9BQU8sRUFBRTtZQUNYLE1BQU0sU0FBUyxHQUFHLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1lBQzlDLE1BQU0sWUFBWSxHQUFHLE9BQU8sQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO1lBQ3pELE1BQU0sVUFBVSxHQUFHLE9BQU8sQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO1lBQ3JELE1BQU0sbUJBQW1CLEdBQUcsT0FBTyxDQUFDLDZCQUE2QixDQUFDLENBQUM7WUFFbkUsSUFBSSxTQUFTLEVBQUU7Z0JBQ2IsTUFBTSxDQUFDLE9BQU8sR0FBRyxJQUFJLE9BQU8sQ0FBQztvQkFDM0IsRUFBRSxFQUFFLFNBQVM7b0JBQ2IsS0FBSyxFQUFFLFlBQVk7b0JBQ25CLEdBQUcsRUFBRSxVQUFVO2lCQUNoQixDQUFDLENBQUM7YUFDSjtZQUVELElBQUksbUJBQW1CLEVBQUU7Z0JBQ3ZCLE1BQU0sQ0FBQyxTQUFTLEdBQUcsSUFBSSxnQkFBZ0IsQ0FBQztvQkFDdEMsVUFBVSxFQUFFLG1CQUFtQjtpQkFDaEMsQ0FBQyxDQUFDO2FBQ0o7U0FDRjtRQUVELE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7Q0FDRiJ9