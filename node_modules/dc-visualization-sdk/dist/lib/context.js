"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Context = exports.CONTEXT_EVENTS = exports.KEY = void 0;
var handler_container_1 = require("./handler-container");
exports.KEY = 'visualization-sdk:context';
var CONTEXT_EVENTS;
(function (CONTEXT_EVENTS) {
    CONTEXT_EVENTS["GET"] = "visualization-sdk:context:get";
    CONTEXT_EVENTS["CHANGE"] = "visualization-sdk:context:change";
})(CONTEXT_EVENTS = exports.CONTEXT_EVENTS || (exports.CONTEXT_EVENTS = {}));
/**
 * Contex class allows you to get the context information of the content item you're viewing and watch for changes to asynchronously update your application
 */
var Context = /** @class */ (function () {
    function Context(connection) {
        var _this = this;
        this.connection = connection;
        var handlerContainer = handler_container_1.HandlerContainerFactory(connection);
        this.changeHandlerContainer = handlerContainer();
        this.connection.on(CONTEXT_EVENTS.CHANGE, function (context) {
            _this.changeHandlerContainer.run(context);
        });
    }
    /**
     * Get the current context information for the content item you're viewing
     *
     * ### Example
     *
     * ```typescript
     * const value = await visualization.context.get();
     *
     * console.log(value)
     * ```
     */
    Context.prototype.get = function () {
        return this.connection.request(CONTEXT_EVENTS.GET);
    };
    /**
     * Sets up a listener for when the content item context information changes.
     *
     * @param cb - callback function to be called when context information changes.
     *
     * @returns a dispose function which removes the listener
     *
     * ### Example
     *
     * ```typescript
     *  const dispose = visualization.context.changed((model) => {
     *    // handle context change
     *  })
     * ```
     */
    Context.prototype.changed = function (cb) {
        return this.changeHandlerContainer.add(cb);
    };
    return Context;
}());
exports.Context = Context;
//# sourceMappingURL=context.js.map