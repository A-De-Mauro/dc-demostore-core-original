"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HubsPage = exports.Hub = void 0;
var HalResource_1 = require("../hal/models/HalResource");
var ContentItem_1 = require("./ContentItem");
var ContentRepository_1 = require("./ContentRepository");
var ContentType_1 = require("./ContentType");
var ContentTypeSchema_1 = require("./ContentTypeSchema");
var Edition_1 = require("./Edition");
var Event_1 = require("./Event");
var Page_1 = require("./Page");
var SearchIndex_1 = require("./SearchIndex");
var Settings_1 = require("./Settings");
var Webhook_1 = require("./Webhook");
var WorkflowState_1 = require("./WorkflowState");
var Extension_1 = require("./Extension");
var SnapshotResultList_1 = require("./SnapshotResultList");
/**
 * Class representing the [Hub](https://amplience.com/docs/api/dynamic-content/management/#resources-hubs) resource.
 * Hubs are containers for multiple repositories including media, content, content types.
 */
var Hub = /** @class */ (function (_super) {
    __extends(Hub, _super);
    function Hub() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Resources and actions related to a Hub
         */
        _this.related = {
            contentTypeSchema: {
                /**
                 * Creates a new Content Type Schema
                 * @param resource
                 */
                create: function (resource) {
                    return _this.createLinkedResource('create-content-type-schema', {}, resource, ContentTypeSchema_1.ContentTypeSchema);
                },
                /**
                 * Retrieves a list of Content Type Schemas associated with this Hub
                 * @param options Pagination options
                 */
                list: function (options) {
                    return _this.fetchLinkedResource('list-content-type-schemas', options, ContentTypeSchema_1.ContentTypeSchemaPage);
                },
            },
            contentRepositories: {
                /**
                 * Retrieves a list of Content Repositories associated with this Hub
                 * @param options Pagination options
                 */
                list: function (options) {
                    return _this.fetchLinkedResource('content-repositories', options, ContentRepository_1.ContentRepositoriesPage);
                },
                /**
                 * Find all the Content Repositories that contain a feature
                 * @param options Options
                 */
                findByFeature: function (feature, options) {
                    return _this.client.fetchLinkedResource({
                        href: "hubs/" + _this.id + "/content-repositories/search/findByFeaturesContaining?feature={feature}{&page,size,sort}",
                        templated: true,
                    }, __assign({ feature: feature }, options), ContentRepository_1.ContentRepositoriesPage);
                },
            },
            contentTypes: {
                /**
                 * Retrieves a list of Content Types associated with this Hub
                 * @param options Pagination options
                 */
                list: function (options) {
                    return _this.fetchLinkedResource('content-types', options, ContentType_1.ContentTypePage);
                },
                /**
                 * Register a Content Type on a hub so it can be enabled on a repository
                 */
                register: function (resource) {
                    return _this.createLinkedResource('register-content-type', {}, resource, ContentType_1.ContentType);
                },
                /**
                 * Get a content type by its id
                 */
                get: function (id) {
                    return _this.client.fetchResource("content-types/" + id, ContentType_1.ContentType);
                },
            },
            contentItems: {
                /**
                 * Facet content items and search by text. See [Text Search Query Syntax](https://amplience.com/docs/api/dynamic-content/management/#section/Text-Search-Query-Syntax) for a summary of the query syntax.
                 */
                facet: function (facetQuery, options) {
                    return _this.performActionThatReturnsResource('facet-content-items', options, facetQuery, ContentItem_1.ContentItemsFacets);
                },
            },
            editions: {
                /**
                 * Find editions by date associated with this Hub
                 * @param options FindByDate & Pageable & Sortable options
                 */
                findByDate: function (options, projection) {
                    return _this.fetchLinkedResource('search-editions', __assign({ projection: projection }, options), Edition_1.EditionsPage);
                },
            },
            events: {
                /**
                 * Creates an Event inside this Hub
                 * @param resource
                 */
                create: function (resource) {
                    return _this.createLinkedResource('create-event', {}, resource, Event_1.Event);
                },
                /**
                 * Retrieves a list of Events associated with this Hub
                 * @param options Pagination options
                 */
                list: function (options) {
                    return _this.fetchLinkedResource('events', options, Event_1.EventsPage);
                },
            },
            extensions: {
                /**
                 * Creates an Extension inside this Hub
                 * @param resource
                 */
                create: function (resource) {
                    return _this.createLinkedResource('create-extension', {}, resource, Extension_1.Extension);
                },
                /**
                 * Get an Extension inside this Hub by its name
                 */
                getByName: function (name) {
                    return _this.fetchLinkedResource('extension-by-name', { name: name }, Extension_1.Extension);
                },
                /**
                 * Retrieves a list of Extension associated with this Hub
                 * @param options Pagination options
                 */
                list: function (options) {
                    return _this.fetchLinkedResource('extensions', options, Extension_1.ExtensionsPage);
                },
            },
            searchIndexes: {
                /**
                 * Create a search index for a given hub
                 * @param resource
                 */
                create: function (resource) {
                    return _this.createLinkedResource('create-algolia-search-index', {}, resource, SearchIndex_1.SearchIndex);
                },
                /**
                 * Get a search index by its id
                 */
                get: function (id) {
                    return _this.client.fetchResource("algolia-search/" + _this.id + "/indexes/" + id, SearchIndex_1.SearchIndex);
                },
                /**
                 * Retrieves a list of search indexes associated with this Hub
                 */
                list: function (parentId, projection, options) {
                    return _this.fetchLinkedResource('algolia-search-indexes', __assign({ parentId: parentId, projection: projection }, options), SearchIndex_1.SearchIndexesPage);
                },
            },
            settings: {
                /**
                 * Updates this hub settings with the changes in the mutation parameter.
                 */
                update: function (mutation) {
                    return _this.updateLinkedResource('update-settings', {
                        method: 'PATCH',
                    }, mutation, Settings_1.Settings);
                },
            },
            snapshots: {
                /**
                 * Creates a Snapshot inside this Hub
                 * @param request
                 */
                create: function (request) {
                    return _this.performActionThatReturnsResource('batch-create-snapshots', {}, request, SnapshotResultList_1.SnapshotResultList);
                },
            },
            webhooks: {
                /**
                 * Creates a Webhook inside this Hub
                 * @param resource
                 */
                create: function (resource) {
                    return _this.createLinkedResource('create-webhook', {}, resource, Webhook_1.Webhook);
                },
                /**
                 * Get a Webhook inside this Hub by its id
                 */
                get: function (id) {
                    return _this.client.fetchResource("hubs/" + _this.id + "/webhooks/" + id, Webhook_1.Webhook);
                },
                /**
                 * Retrieves a list of Webhooks associated with this Hub
                 * @param options Pagination options
                 */
                list: function (options) {
                    return _this.fetchLinkedResource('webhooks', options, Webhook_1.WebhooksPage);
                },
            },
            workflowStates: {
                /**
                 * Creates a Workflow State inside this Hub
                 * @param resource
                 */
                create: function (resource) {
                    return _this.createLinkedResource('create-workflow-state', {}, resource, WorkflowState_1.WorkflowState);
                },
                /**
                 * Get a Webhook State insidee this Hub by its id
                 * @param id
                 */
                get: function (id) {
                    return _this.client.fetchResource("workflow-states/" + id, WorkflowState_1.WorkflowState);
                },
                /**
                 * Retrieves a list of Workflow States associated with this Hub
                 * @param options Pagination options
                 */
                list: function (options) {
                    return _this.fetchLinkedResource('workflow-states', options, WorkflowState_1.WorkflowStatesPage);
                },
            },
        };
        return _this;
    }
    return Hub;
}(HalResource_1.HalResource));
exports.Hub = Hub;
/**
 * @hidden
 */
var HubsPage = /** @class */ (function (_super) {
    __extends(HubsPage, _super);
    function HubsPage(data) {
        return _super.call(this, 'hubs', Hub, data) || this;
    }
    return HubsPage;
}(Page_1.Page));
exports.HubsPage = HubsPage;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSHViLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9tb2RlbC9IdWIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEseURBQXdEO0FBQ3hELDZDQUF1RTtBQUN2RSx5REFHNkI7QUFDN0IsNkNBQTZEO0FBQzdELHlEQUErRTtBQUMvRSxxQ0FBa0Q7QUFDbEQsaUNBQTRDO0FBRzVDLCtCQUE4QjtBQUU5Qiw2Q0FBK0Q7QUFHL0QsdUNBQXNDO0FBQ3RDLHFDQUFrRDtBQUNsRCxpREFBb0U7QUFDcEUseUNBQXdEO0FBRXhELDJEQUEwRDtBQUUxRDs7O0dBR0c7QUFDSDtJQUF5Qix1QkFBVztJQUFwQztRQUFBLHFFQXFVQztRQWxSQzs7V0FFRztRQUNhLGFBQU8sR0FBRztZQUN4QixpQkFBaUIsRUFBRTtnQkFDakI7OzttQkFHRztnQkFDSCxNQUFNLEVBQUUsVUFBQyxRQUEyQjtvQkFDbEMsT0FBQSxLQUFJLENBQUMsb0JBQW9CLENBQ3ZCLDRCQUE0QixFQUM1QixFQUFFLEVBQ0YsUUFBUSxFQUNSLHFDQUFpQixDQUNsQjtnQkFMRCxDQUtDO2dCQUVIOzs7bUJBR0c7Z0JBQ0gsSUFBSSxFQUFFLFVBQUMsT0FBa0I7b0JBQ3ZCLE9BQUEsS0FBSSxDQUFDLG1CQUFtQixDQUN0QiwyQkFBMkIsRUFDM0IsT0FBTyxFQUNQLHlDQUFxQixDQUN0QjtnQkFKRCxDQUlDO2FBQ0o7WUFFRCxtQkFBbUIsRUFBRTtnQkFDbkI7OzttQkFHRztnQkFDSCxJQUFJLEVBQUUsVUFBQyxPQUE2QjtvQkFDbEMsT0FBQSxLQUFJLENBQUMsbUJBQW1CLENBQ3RCLHNCQUFzQixFQUN0QixPQUFPLEVBQ1AsMkNBQXVCLENBQ3hCO2dCQUpELENBSUM7Z0JBRUg7OzttQkFHRztnQkFDSCxhQUFhLEVBQUUsVUFDYixPQUFlLEVBQ2YsT0FBNkI7b0JBRTdCLE9BQUEsS0FBSSxDQUFDLE1BQU0sQ0FB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