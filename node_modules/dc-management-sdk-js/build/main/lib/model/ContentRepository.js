"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContentRepositoriesPage = exports.ContentRepository = void 0;
var HalResource_1 = require("../hal/models/HalResource");
var ContentItem_1 = require("./ContentItem");
var Folder_1 = require("./Folder");
var Hub_1 = require("./Hub");
var Page_1 = require("./Page");
/**
 * Class representing the [Content Repository](https://amplience.com/docs/api/dynamic-content/management/#tag/Content-Repositories) resource.
 * Content repositories are containers where content can be stored.
 */
var ContentRepository = /** @class */ (function (_super) {
    __extends(ContentRepository, _super);
    function ContentRepository() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Resources and actions related to a Content Repository
         */
        _this.related = {
            /**
             * Retrieves the Hub this content repository is stored in
             */
            hub: function () { return _this.fetchLinkedResource('hub', {}, Hub_1.Hub); },
            folders: {
                /**
                 * Retrieves the list of top-level folders within this Content Repository
                 */
                list: function (options) {
                    return _this.fetchLinkedResource('folders', options, Folder_1.FoldersPage);
                },
                /**
                 * Creates a folder in the Content Repository
                 * @param resource The new Folder to create
                 */
                create: function (resource) {
                    return _this.createLinkedResource('create-folder', {}, resource, Folder_1.Folder);
                },
            },
            contentItems: {
                /**
                 * Creates a content item inside the repository
                 * @param resource The new content item to create
                 */
                create: function (resource) {
                    return _this.createLinkedResource('create-content-item', {}, resource, ContentItem_1.ContentItem);
                },
                /**
                 * Retrieves a list of Content Items stored within this Content Repository
                 */
                list: function (options) {
                    return _this.fetchLinkedResource('content-items', options, ContentItem_1.ContentItemsPage);
                },
            },
            contentTypes: {
                /**
                 * Assigns a content type to the repository
                 */
                assign: function (contentTypeId) {
                    return _this.performActionThatReturnsResource('assign-content-type', {}, { contentTypeId: contentTypeId }, ContentRepository);
                },
                /**
                 * Unassign a content type from this repository
                 */
                unassign: function (contentTypeId) {
                    return _this.deleteLinkedResource('unassign-content-type', {
                        id: contentTypeId,
                    });
                },
            },
        };
        return _this;
    }
    return ContentRepository;
}(HalResource_1.HalResource));
exports.ContentRepository = ContentRepository;
/**
 * @hidden
 */
var ContentRepositoriesPage = /** @class */ (function (_super) {
    __extends(ContentRepositoriesPage, _super);
    function ContentRepositoriesPage(data) {
        return _super.call(this, 'content-repositories', ContentRepository, data) || this;
    }
    return ContentRepositoriesPage;
}(Page_1.Page));
exports.ContentRepositoriesPage = ContentRepositoriesPage;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udGVudFJlcG9zaXRvcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbGliL21vZGVsL0NvbnRlbnRSZXBvc2l0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSx5REFBd0Q7QUFDeEQsNkNBQThEO0FBQzlELG1DQUErQztBQUMvQyw2QkFBNEI7QUFDNUIsK0JBQThCO0FBb0I5Qjs7O0dBR0c7QUFDSDtJQUF1QyxxQ0FBVztJQUFsRDtRQUFBLHFFQXNHQztRQWpFQzs7V0FFRztRQUNhLGFBQU8sR0FBRztZQUN4Qjs7ZUFFRztZQUNILEdBQUcsRUFBRSxjQUFvQixPQUFBLEtBQUksQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLEVBQUUsRUFBRSxFQUFFLFNBQUcsQ0FBQyxFQUF4QyxDQUF3QztZQUVqRSxPQUFPLEVBQUU7Z0JBQ1A7O21CQUVHO2dCQUNILElBQUksRUFBRSxVQUFDLE9BQWtCO29CQUN2QixPQUFBLEtBQUksQ0FBQyxtQkFBbUIsQ0FBQyxTQUFTLEVBQUUsT0FBTyxFQUFFLG9CQUFXLENBQUM7Z0JBQXpELENBQXlEO2dCQUUzRDs7O21CQUdHO2dCQUNILE1BQU0sRUFBRSxVQUFDLFFBQWdCO29CQUN2QixPQUFBLEtBQUksQ0FBQyxvQkFBb0IsQ0FBQyxlQUFlLEVBQUUsRUFBRSxFQUFFLFFBQVEsRUFBRSxlQUFNLENBQUM7Z0JBQWhFLENBQWdFO2FBQ25FO1lBRUQsWUFBWSxFQUFFO2dCQUNaOzs7bUJBR0c7Z0JBQ0gsTUFBTSxFQUFFLFVBQUMsUUFBcUI7b0JBQzVCLE9BQUEsS0FBSSxDQUFDLG9CQUFvQixDQUN2QixxQkFBcUIsRUFDckIsRUFBRSxFQUNGLFFBQVEsRUFDUix5QkFBVyxDQUNaO2dCQUxELENBS0M7Z0JBRUg7O21CQUVHO2dCQUNILElBQUksRUFBRSxVQUFDLE9BQTZCO29CQUNsQyxPQUFBLEtBQUksQ0FBQyxtQkFBbUIsQ0FBQyxlQUFlLEVBQUUsT0FBTyxFQUFFLDhCQUFnQixDQUFDO2dCQUFwRSxDQUFvRTthQUN2RTtZQUVELFlBQVksRUFBRTtnQkFDWjs7bUJBRUc7Z0JBQ0gsTUFBTSxFQUFFLFVBQUMsYUFBcUI7b0JBQzVCLE9BQUEsS0FBSSxDQUFDLGdDQUFnQyxDQUNuQyxxQkFBcUIsRUFDckIsRUFBRSxFQUNGLEVBQUUsYUFBYSxlQUFBLEVBQUUsRUFDakIsaUJBQWlCLENBQ2xCO2dCQUxELENBS0M7Z0JBRUg7O21CQUVHO2dCQUNILFFBQVEsRUFBRSxVQUFDLGFBQXFCO29CQUM5QixPQUFBLEtBQUksQ0FBQyxvQkFBb0IsQ0FBQyx1QkFBdUIsRUFBRTt3QkFDakQsRUFBRSxFQUFFLGFBQWE7cUJBQ2xCLENBQUM7Z0JBRkYsQ0FFRTthQUNMO1NBQ0YsQ0FBQzs7SUFDSixDQUFDO0lBQUQsd0JBQUM7QUFBRCxDQUFDLEFBdEdELENBQXVDLHlCQUFXLEdBc0dqRDtBQXRHWSw4Q0FBaUI7QUF3RzlCOztHQUVHO0FBQ0g7SUFBNkMsMkNBQXVCO0lBQ2xFLGlDQUFZLElBQVU7ZUFDcEIsa0JBQU0sc0JBQXNCLEVBQUUsaUJBQWlCLEVBQUUsSUFBSSxDQUFDO0lBQ3hELENBQUM7SUFDSCw4QkFBQztBQUFELENBQUMsQUFKRCxDQUE2QyxXQUFJLEdBSWhEO0FBSlksMERBQXVCIn0=