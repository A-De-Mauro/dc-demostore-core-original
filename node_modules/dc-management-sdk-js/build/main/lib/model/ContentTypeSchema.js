"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContentTypeSchemaPage = exports.ContentTypeSchema = exports.ValidationLevel = void 0;
var HalResource_1 = require("../hal/models/HalResource");
var Hub_1 = require("./Hub");
var Page_1 = require("./Page");
/**
 * Supported validation levels
 */
var ValidationLevel;
(function (ValidationLevel) {
    ValidationLevel["SLOT"] = "SLOT";
    ValidationLevel["CONTENT_TYPE"] = "CONTENT_TYPE";
    ValidationLevel["PARTIAL"] = "PARTIAL";
})(ValidationLevel = exports.ValidationLevel || (exports.ValidationLevel = {}));
/**
 * Content type schema
 */
var ContentTypeSchema = /** @class */ (function (_super) {
    __extends(ContentTypeSchema, _super);
    function ContentTypeSchema() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Resources and actions related to a ContentTypeSchema
         */
        _this.related = {
            /**
             * Retrieves the Hub this content type schema is stored in
             */
            hub: function () { return _this.fetchLinkedResource('hub', {}, Hub_1.Hub); },
            /**
             * Updated content type schema
             * @param updated
             */
            update: function (mutation) {
                return _this.updateResource(mutation, ContentTypeSchema);
            },
            /**
             * Archive content type schema
             */
            archive: function () {
                return _this.performActionThatReturnsResource('archive', {}, { version: _this.version }, ContentTypeSchema);
            },
            /**
             * Unarchive content type schema
             */
            unarchive: function () {
                return _this.performActionThatReturnsResource('unarchive', {}, { version: _this.version }, ContentTypeSchema);
            },
        };
        return _this;
    }
    return ContentTypeSchema;
}(HalResource_1.HalResource));
exports.ContentTypeSchema = ContentTypeSchema;
/**
 * @hidden
 */
var ContentTypeSchemaPage = /** @class */ (function (_super) {
    __extends(ContentTypeSchemaPage, _super);
    function ContentTypeSchemaPage(data) {
        return _super.call(this, 'content-type-schemas', ContentTypeSchema, data) || this;
    }
    return ContentTypeSchemaPage;
}(Page_1.Page));
exports.ContentTypeSchemaPage = ContentTypeSchemaPage;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udGVudFR5cGVTY2hlbWEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbGliL21vZGVsL0NvbnRlbnRUeXBlU2NoZW1hLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSx5REFBd0Q7QUFDeEQsNkJBQTRCO0FBQzVCLCtCQUE4QjtBQUc5Qjs7R0FFRztBQUNILElBQVksZUFJWDtBQUpELFdBQVksZUFBZTtJQUN6QixnQ0FBYSxDQUFBO0lBQ2IsZ0RBQTZCLENBQUE7SUFDN0Isc0NBQW1CLENBQUE7QUFDckIsQ0FBQyxFQUpXLGVBQWUsR0FBZix1QkFBZSxLQUFmLHVCQUFlLFFBSTFCO0FBRUQ7O0dBRUc7QUFDSDtJQUF1QyxxQ0FBVztJQUFsRDtRQUFBLHFFQTBGQztRQXRDQzs7V0FFRztRQUNhLGFBQU8sR0FBRztZQUN4Qjs7ZUFFRztZQUNILEdBQUcsRUFBRSxjQUFvQixPQUFBLEtBQUksQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLEVBQUUsRUFBRSxFQUFFLFNBQUcsQ0FBQyxFQUF4QyxDQUF3QztZQUVqRTs7O2VBR0c7WUFDSCxNQUFNLEVBQUUsVUFBQyxRQUEyQjtnQkFDbEMsT0FBQSxLQUFJLENBQUMsY0FBYyxDQUFDLFFBQVEsRUFBRSxpQkFBaUIsQ0FBQztZQUFoRCxDQUFnRDtZQUVsRDs7ZUFFRztZQUNILE9BQU8sRUFBRTtnQkFDUCxPQUFBLEtBQUksQ0FBQyxnQ0FBZ0MsQ0FDbkMsU0FBUyxFQUNULEVBQUUsRUFDRixFQUFFLE9BQU8sRUFBRSxLQUFJLENBQUMsT0FBTyxFQUFFLEVBQ3pCLGlCQUFpQixDQUNsQjtZQUxELENBS0M7WUFFSDs7ZUFFRztZQUNILFNBQVMsRUFBRTtnQkFDVCxPQUFBLEtBQUksQ0FBQyxnQ0FBZ0MsQ0FDbkMsV0FBVyxFQUNYLEVBQUUsRUFDRixFQUFFLE9BQU8sRUFBRSxLQUFJLENBQUMsT0FBTyxFQUFFLEVBQ3pCLGlCQUFpQixDQUNsQjtZQUxELENBS0M7U0FDSixDQUFDOztJQUNKLENBQUM7SUFBRCx3QkFBQztBQUFELENBQUMsQUExRkQsQ0FBdUMseUJBQVcsR0EwRmpEO0FBMUZZLDhDQUFpQjtBQTRGOUI7O0dBRUc7QUFDSDtJQUEyQyx5Q0FBdUI7SUFDaEUsK0JBQVksSUFBVTtlQUNwQixrQkFBTSxzQkFBc0IsRUFBRSxpQkFBaUIsRUFBRSxJQUFJLENBQUM7SUFDeEQsQ0FBQztJQUNILDRCQUFDO0FBQUQsQ0FBQyxBQUpELENBQTJDLFdBQUksR0FJOUM7QUFKWSxzREFBcUIifQ==