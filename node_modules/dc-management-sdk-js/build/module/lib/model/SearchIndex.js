import { HalResource } from '../hal/models/HalResource';
import { AssignedContentType, AssignedContentTypePage, } from './AssignedContentType';
import { Page } from './Page';
import { SearchIndexKey } from './SearchIndexKey';
import { SearchIndexSettings } from './SearchIndexSettings';
import { SearchIndexStatistics } from './SearchIndexStatistics';
import { SearchIndexTopHitsCollection } from './SearchIndexTopHits';
import { SearchIndexTopSearchesCollection, } from './SearchIndexTopSearches';
import { SearchIndexSearchesWithNoResultsCollection } from './SearchIndexSearchesWithNoResults';
import { SearchIndexTopFiltersNoResultSearchCollection } from './SearchIndexTopFiltersNoResultSearch';
import { SearchIndexUsersCount } from './SearchIndexUsersCount';
import { SearchIndexSearchesCount } from './SearchIndexSearchesCount';
import { SearchIndexNoResultsRate } from './SearchIndexNoResultsRate';
import { Hub } from './Hub';
/**
 * Class representing an Algolia Search Index.
 */
export class SearchIndex extends HalResource {
    constructor() {
        super(...arguments);
        /**
         * Resources and actions related to a Search Index.
         */
        this.related = {
            /**
             * Retrieves the Hub this search index is stored in
             */
            hub: () => this.fetchLinkedResource('hub', {}, Hub),
            clear: () => this.performActionThatReturnsResource('clear', {}, {}, SearchIndex),
            delete: () => this.deleteResource(),
            update: (resource) => this.updateResource(resource, SearchIndex),
            assignedContentTypes: {
                create: (resource) => this.createLinkedResource('create-assigned-content-types', {}, resource, AssignedContentType),
                get: (id) => this.client.fetchResource(
                // tslint:disable-next-line:no-string-literal
                `${this._links['self'].href}/assigned-content-types/${id}`, AssignedContentType),
                list: (options) => this.fetchLinkedResource('assigned-content-types', { options }, AssignedContentTypePage),
            },
            indexObject: {
                delete: (id) => 
                // tslint:disable-next-line:no-string-literal
                this.client.deleteResource(`${this._links['self'].href}/objects/${id}`),
            },
            keys: {
                get: () => this.fetchLinkedResource('hub-search-key', {}, SearchIndexKey),
            },
            replicas: {
                list: (projection, options) => this.fetchLinkedResource('list-replicas', { projection, options }, SearchIndexesPage),
            },
            settings: {
                get: () => this.fetchLinkedResource('settings', {}, SearchIndexSettings),
                update: (resource, forwardToReplicas) => this.updateLinkedResource('update-settings', { forwardToReplicas }, resource, SearchIndexSettings),
            },
            stats: {
                get: (period) => this.fetchLinkedResource('stats', { period }, SearchIndexStatistics),
            },
            'top-searches': {
                get: ({ clickAnalytics = false, orderBy, direction, startDate, endDate, limit, offset, tags, includeReplicas, }) => this.fetchLinkedResource('top-searches', {
                    clickAnalytics,
                    direction,
                    endDate,
                    limit,
                    offset,
                    orderBy,
                    startDate,
                    tags,
                    includeReplicas,
                }, SearchIndexTopSearchesCollection),
            },
            'top-hits': {
                get: ({ search, startDate, endDate, limit, offset, tags, includeReplicas, }) => this.fetchLinkedResource('top-hits', {
                    endDate,
                    limit,
                    offset,
                    search,
                    startDate,
                    tags,
                    includeReplicas,
                }, SearchIndexTopHitsCollection),
            },
            'searches-with-no-results': {
                get: ({ startDate, endDate, limit, offset, tags, includeReplicas, }) => this.fetchLinkedResource('searches-with-no-results', {
                    endDate,
                    limit,
                    offset,
                    startDate,
                    tags,
                    includeReplicas,
                }, SearchIndexSearchesWithNoResultsCollection),
            },
            'top-filters-no-result-search': {
                get: ({ search, startDate, endDate, limit, offset, tags, includeReplicas, }) => this.fetchLinkedResource('top-filters-no-result-search', {
                    endDate,
                    limit,
                    offset,
                    search,
                    startDate,
                    tags,
                    includeReplicas,
                }, SearchIndexTopFiltersNoResultSearchCollection),
            },
            'users-count': {
                get: ({ startDate, endDate, tags, includeReplicas, }) => this.fetchLinkedResource('users-count', {
                    startDate,
                    endDate,
                    tags,
                    includeReplicas,
                }, SearchIndexUsersCount),
            },
            'searches-count': {
                get: ({ startDate, endDate, tags, includeReplicas, }) => this.fetchLinkedResource('searches-count', {
                    startDate,
                    endDate,
                    tags,
                    includeReplicas,
                }, SearchIndexSearchesCount),
            },
            'no-results-rate': {
                get: ({ startDate, endDate, tags, includeReplicas, }) => this.fetchLinkedResource('no-results-rate', {
                    startDate,
                    endDate,
                    tags,
                    includeReplicas,
                }, SearchIndexNoResultsRate),
            },
        };
    }
}
/**
 * @hidden
 */
export class SearchIndexesPage extends Page {
    constructor(data) {
        super('indexes', SearchIndex, data);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VhcmNoSW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbGliL21vZGVsL1NlYXJjaEluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUN4RCxPQUFPLEVBQ0wsbUJBQW1CLEVBQ25CLHVCQUF1QixHQUN4QixNQUFNLHVCQUF1QixDQUFDO0FBQy9CLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFFOUIsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzVELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ2hFLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3BFLE9BQU8sRUFFTCxnQ0FBZ0MsR0FDakMsTUFBTSwwQkFBMEIsQ0FBQztBQUVsQyxPQUFPLEVBQUUsMENBQTBDLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUNoRyxPQUFPLEVBQUUsNkNBQTZDLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUN0RyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUN0RSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUN0RSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sT0FBTyxDQUFDO0FBRTVCOztHQUVHO0FBQ0gsTUFBTSxPQUFPLFdBQVksU0FBUSxXQUFXO0lBQTVDOztRQThDRTs7V0FFRztRQUNhLFlBQU8sR0FBRztZQUN4Qjs7ZUFFRztZQUNILEdBQUcsRUFBRSxHQUFpQixFQUFFLENBQUMsSUFBSSxDQUFDLG1CQUFtQixD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